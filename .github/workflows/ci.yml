name: CI - Build & Run Tests

on:
  push:
    branches: [ main, Sai ]
  pull_request:
    branches: [ main, Sai ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache PlatformIO packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.platformio
          .pio
        key: ${{ runner.os }}-platformio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-platformio-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install PlatformIO Core
      run: |
        python -m pip install --upgrade pip
        pip install platformio

    - name: PlatformIO diagnostics
      run: |
        platformio --version || true
        platformio project inspect || true

    - name: Pre-install required libraries
      run: |
        echo "Installing SdFat and Audio library to avoid git clone issues during build"
        set -e
        retry() {
          local n=1
          local max=3
          local delay=5
          while true; do
            "$@" && break || {
              if [[ $n -lt $max ]]; then
                echo "Command failed. Attempt $n/$max:";
                n=$((n+1))
                echo "Retrying in $delay seconds...";
                sleep $delay;
              else
                echo "The command has failed after $n attempts.";
                return 1
              fi
            }
          done
        }
  # Do not globally install SdFat; Teensy's framework provides a modified SdFat
  # which conflicts with the standard SdFat. Install only the Audio library.
  retry platformio lib --global install https://github.com/PaulStoffregen/Audio.git

    - name: List PlatformIO library cache
      run: |
        echo "PlatformIO library cache contents:"
        ls -la ~/.platformio/lib || true

    - name: Build native environment
      run: |
        echo "Creating temporary native-only PlatformIO config to avoid Arduino lib_deps"
    cat > platformio.native.ini << 'EOF'
    [env:native]
    platform = native
    build_flags = -I"${PROJECT_DIR}/Guitar Unit Testing Files"
    lib_ldf_mode = deep
    build_src_filter =
      +<*>
      -<teensy_audio_io*>
    EOF
        platformio run -e native -v --project-conf platformio.native.ini

    - name: Build teensy41 environment
      run: |
        echo "Building teensy41 environment (embedded build only; no upload)"
        # Remove any SdFat library that PlatformIO may have placed into
        # .pio/libdeps/teensy41. Teensy's framework provides its own
        # modified SdFat which must be used instead; leftover copies in
        # project libdeps cause SD.h to error out.
        if [ -d .pio/libdeps/teensy41/SdFat ]; then
          echo "Found .pio/libdeps/teensy41/SdFat; removing to prefer Teensy's bundled copy"
          rm -rf .pio/libdeps/teensy41/SdFat
        fi
        echo "libdeps after cleanup:" && ls -la .pio/libdeps || true
        platformio run -e teensy41 -v

    - name: Run produced test binary
      run: |
        echo "Listing .pio/build/native contents for debugging"
        ls -la .pio/build/native || true
        # Try common executable names produced by PlatformIO on Linux/Windows
        if [ -f .pio/build/native/program ]; then
          exe=.pio/build/native/program
        elif [ -f .pio/build/native/program.exe ]; then
          exe=.pio/build/native/program.exe
        else
          echo "No program binary found in .pio/build/native"
          ls -la .pio/build || true
          exit 2
        fi
        echo "Running test binary: $exe"
        chmod +x "$exe" || true
        "$exe"

    - name: Archive test output
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pio-build
        path: .pio/build/native/
